/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as MainCoursesImport } from './routes/_main/courses'
import { Route as MainUsersIndexImport } from './routes/_main/users/index'
import { Route as MainSectionsIndexImport } from './routes/_main/sections/index'
import { Route as MainQuestionsIndexImport } from './routes/_main/questions/index'
import { Route as MainQuestionTypesIndexImport } from './routes/_main/question-types/index'

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const MainCoursesRoute = MainCoursesImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => MainRoute,
} as any)

const MainUsersIndexRoute = MainUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => MainRoute,
} as any)

const MainSectionsIndexRoute = MainSectionsIndexImport.update({
  id: '/sections/',
  path: '/sections/',
  getParentRoute: () => MainRoute,
} as any)

const MainQuestionsIndexRoute = MainQuestionsIndexImport.update({
  id: '/questions/',
  path: '/questions/',
  getParentRoute: () => MainRoute,
} as any)

const MainQuestionTypesIndexRoute = MainQuestionTypesIndexImport.update({
  id: '/question-types/',
  path: '/question-types/',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_main/courses': {
      id: '/_main/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof MainCoursesImport
      parentRoute: typeof MainImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_main/question-types/': {
      id: '/_main/question-types/'
      path: '/question-types'
      fullPath: '/question-types'
      preLoaderRoute: typeof MainQuestionTypesIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/questions/': {
      id: '/_main/questions/'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof MainQuestionsIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/sections/': {
      id: '/_main/sections/'
      path: '/sections'
      fullPath: '/sections'
      preLoaderRoute: typeof MainSectionsIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/users/': {
      id: '/_main/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof MainUsersIndexImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface MainRouteChildren {
  MainCoursesRoute: typeof MainCoursesRoute
  MainQuestionTypesIndexRoute: typeof MainQuestionTypesIndexRoute
  MainQuestionsIndexRoute: typeof MainQuestionsIndexRoute
  MainSectionsIndexRoute: typeof MainSectionsIndexRoute
  MainUsersIndexRoute: typeof MainUsersIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainCoursesRoute: MainCoursesRoute,
  MainQuestionTypesIndexRoute: MainQuestionTypesIndexRoute,
  MainQuestionsIndexRoute: MainQuestionsIndexRoute,
  MainSectionsIndexRoute: MainSectionsIndexRoute,
  MainUsersIndexRoute: MainUsersIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MainRouteWithChildren
  '/courses': typeof MainCoursesRoute
  '/login': typeof LoginIndexRoute
  '/question-types': typeof MainQuestionTypesIndexRoute
  '/questions': typeof MainQuestionsIndexRoute
  '/sections': typeof MainSectionsIndexRoute
  '/users': typeof MainUsersIndexRoute
}

export interface FileRoutesByTo {
  '': typeof MainRouteWithChildren
  '/courses': typeof MainCoursesRoute
  '/login': typeof LoginIndexRoute
  '/question-types': typeof MainQuestionTypesIndexRoute
  '/questions': typeof MainQuestionsIndexRoute
  '/sections': typeof MainSectionsIndexRoute
  '/users': typeof MainUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_main': typeof MainRouteWithChildren
  '/_main/courses': typeof MainCoursesRoute
  '/login/': typeof LoginIndexRoute
  '/_main/question-types/': typeof MainQuestionTypesIndexRoute
  '/_main/questions/': typeof MainQuestionsIndexRoute
  '/_main/sections/': typeof MainSectionsIndexRoute
  '/_main/users/': typeof MainUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/courses'
    | '/login'
    | '/question-types'
    | '/questions'
    | '/sections'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/courses'
    | '/login'
    | '/question-types'
    | '/questions'
    | '/sections'
    | '/users'
  id:
    | '__root__'
    | '/_main'
    | '/_main/courses'
    | '/login/'
    | '/_main/question-types/'
    | '/_main/questions/'
    | '/_main/sections/'
    | '/_main/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MainRoute: typeof MainRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  MainRoute: MainRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_main",
        "/login/"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/courses",
        "/_main/question-types/",
        "/_main/questions/",
        "/_main/sections/",
        "/_main/users/"
      ]
    },
    "/_main/courses": {
      "filePath": "_main/courses.tsx",
      "parent": "/_main"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_main/question-types/": {
      "filePath": "_main/question-types/index.tsx",
      "parent": "/_main"
    },
    "/_main/questions/": {
      "filePath": "_main/questions/index.tsx",
      "parent": "/_main"
    },
    "/_main/sections/": {
      "filePath": "_main/sections/index.tsx",
      "parent": "/_main"
    },
    "/_main/users/": {
      "filePath": "_main/users/index.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
