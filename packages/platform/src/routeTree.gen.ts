/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as MainMyCoursesIndexImport } from './routes/_main/my-courses/index'
import { Route as MainDashboardIndexImport } from './routes/_main/dashboard/index'
import { Route as MainAllCoursesIndexImport } from './routes/_main/all-courses/index'

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const MainMyCoursesIndexRoute = MainMyCoursesIndexImport.update({
  id: '/my-courses/',
  path: '/my-courses/',
  getParentRoute: () => MainRoute,
} as any)

const MainDashboardIndexRoute = MainDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => MainRoute,
} as any)

const MainAllCoursesIndexRoute = MainAllCoursesIndexImport.update({
  id: '/all-courses/',
  path: '/all-courses/',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_main/all-courses/': {
      id: '/_main/all-courses/'
      path: '/all-courses'
      fullPath: '/all-courses'
      preLoaderRoute: typeof MainAllCoursesIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/dashboard/': {
      id: '/_main/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainDashboardIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/my-courses/': {
      id: '/_main/my-courses/'
      path: '/my-courses'
      fullPath: '/my-courses'
      preLoaderRoute: typeof MainMyCoursesIndexImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface MainRouteChildren {
  MainAllCoursesIndexRoute: typeof MainAllCoursesIndexRoute
  MainDashboardIndexRoute: typeof MainDashboardIndexRoute
  MainMyCoursesIndexRoute: typeof MainMyCoursesIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainAllCoursesIndexRoute: MainAllCoursesIndexRoute,
  MainDashboardIndexRoute: MainDashboardIndexRoute,
  MainMyCoursesIndexRoute: MainMyCoursesIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MainRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/all-courses': typeof MainAllCoursesIndexRoute
  '/dashboard': typeof MainDashboardIndexRoute
  '/my-courses': typeof MainMyCoursesIndexRoute
}

export interface FileRoutesByTo {
  '': typeof MainRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/all-courses': typeof MainAllCoursesIndexRoute
  '/dashboard': typeof MainDashboardIndexRoute
  '/my-courses': typeof MainMyCoursesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_main': typeof MainRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/_main/all-courses/': typeof MainAllCoursesIndexRoute
  '/_main/dashboard/': typeof MainDashboardIndexRoute
  '/_main/my-courses/': typeof MainMyCoursesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/all-courses' | '/dashboard' | '/my-courses'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/all-courses' | '/dashboard' | '/my-courses'
  id:
    | '__root__'
    | '/_main'
    | '/login/'
    | '/_main/all-courses/'
    | '/_main/dashboard/'
    | '/_main/my-courses/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MainRoute: typeof MainRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  MainRoute: MainRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_main",
        "/login/"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/all-courses/",
        "/_main/dashboard/",
        "/_main/my-courses/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_main/all-courses/": {
      "filePath": "_main/all-courses/index.tsx",
      "parent": "/_main"
    },
    "/_main/dashboard/": {
      "filePath": "_main/dashboard/index.tsx",
      "parent": "/_main"
    },
    "/_main/my-courses/": {
      "filePath": "_main/my-courses/index.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
